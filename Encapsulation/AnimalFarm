using System;
using AnimalFarm1.Models;

namespace AnimalFarm1
{
    class Program
    {
        static void Main(string[] args)
        {
            string name = Console.ReadLine();
            int age = int.Parse(Console.ReadLine());

            try
            {

                Chicken chicken = new Chicken(name, age);
                Console.WriteLine(
                    $"Chicken { chicken.Name} (age {chicken.Age}) can produce { chicken.ProductPerDay} eggs per day.");
                   
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
            }



        }
    }
}

namespace AnimalFarm1.Models
{
    public class Chicken
    {
        private const int MinAge = 0;
        private const int MaxAge = 15;

        private string name;
        private int age;

        public Chicken(string name, int age)
        {
            this.Name = name;
            this.Age = age;
        }

        public string Name
        {
            get
            {
                return this.name;
            }

            private set
            {
                if (string.IsNullOrWhiteSpace(value))
                {
                    throw new ArgumentException($"{nameof(Name)} cannot be empty.");
                }

                this.name = value;
            }
        }

        public int Age
        {
            get
            {
                return this.age;
            }

            private set
            {
                if (value <= MinAge || value >= MaxAge)
                {
                    throw new ArgumentException($"{nameof(Age)}Age should be between {MinAge} and {MaxAge}.");
                }
                this.age = value;
            }
        }

        public double ProductPerDay
        {
            get
            {
                return this.CalculateProductPerDay();
            }
        }
      
        private double CalculateProductPerDay() => this.Age switch
        {
            var x when x >= 0 && x < 4 => 1.5,
            var x when x >= 4 && x < 8 =>  2,
            var x when x >= 8 && x < 12 => 1,
            _ => 0.75

        };

    }
}

